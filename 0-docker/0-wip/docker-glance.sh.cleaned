#!/bin/bash

# Glance Dashboard Setup in Docker (for Linux) automated deployment.
# 

# Check if Docker is installed
if ! command -v docker &> /dev/null
then
    echo "Docker is not installed. Please install Docker and rerun."
    echo "See instructions: https://docs.docker.com/engine/install/"
    exit 1
fi

# [ Styling ]
RED='\033[1;31m'
GREEN='\033[1;32m'
CYAN='\033[1;36m'
YELLOW='\033[1;33m'
BLUE_BOLD='\033[1;34m' # Used for default paths
BOLD='\033[1m'
NC='\033[0m' # No Color
UNDERLINE='\033[4m'

# [ Detect Host IP ]
HOST_IP_DETECTED=$(hostname -I | awk '{print $1}') # Renamed to avoid conflict if user enters 'localhost'
if [ -z "$HOST_IP_DETECTED" ]; then
    echo -e "${YELLOW} Could not automatically detect a primary local IP. You might need to find it manually (e.g., using 'ip a').${NC}"
    DISPLAY_HOST_IP="localhost" # Fallback for display
else
    DISPLAY_HOST_IP="$HOST_IP_DETECTED"
fi
echo -e "${CYAN}Detected local IP for access instructions: ${DISPLAY_HOST_IP}${NC}"


# [ Configuration ]
# --- Container Settings ---
CONTAINER_NAME="glance"
APP_IMAGE="glanceapp/glance:latest" # Official Glance image

# --- Default Host directory for Glance Configuration ---
DEFAULT_HOST_CONFIG_DIR="$HOME/.config/glance-docker"
APP_CONTAINER_CONFIG_DIR="/app/config" # Internal config path inside the Glance container

# --- Port Settings ---
DEFAULT_APP_HOST_PORT=8080    # Default host port for Glance
APP_CONTAINER_PORT=8080       # Glance internal port (fixed by the image)

# [ Helper Functions ]
# Function to check if a directory exists or create it
ensure_dir() {
    if [ ! -d "$1" ]; then
        echo -e "${CYAN}Ensuring directory exists on host: $1${NC}"
        mkdir -p "$1"
        if [ $? -ne 0 ]; then
            echo -e "${RED} Error: Failed to create directory: $1${NC}"
            echo -e "${YELLOW}Please check permissions or create it manually.${NC}"
            exit 1
        fi
        echo -e "${GREEN} Directory created or already exists.${NC}"
    else
        echo -e "${GREEN} Directory already exists on host: $1${NC}"
    fi
}


# [ Check for Existing Container ]
# If a container with the same name exists, we should stop and remove it before proceeding
# to avoid conflicts with the new settings (like port) or if the user wants a fresh install.
EXISTS=$(docker ps -a --format '{{.Names}}' | grep -w "$CONTAINER_NAME")
if [ ! -z "$EXISTS" ]; then
    echo -e "${YELLOW}An existing Glance container named '$CONTAINER_NAME' was found.${NC}"
    read -p "Do you want to remove the existing container to proceed with a fresh installation? (y/N): " remove_existing
    if [[ "$remove_existing" =~ ^[Yy]$ ]]; then
        echo -e "${CYAN}Stopping and removing existing container '$CONTAINER_NAME'...${NC}"
        docker stop "$CONTAINER_NAME" >/dev/null 2>&1
        docker rm "$CONTAINER_NAME" >/dev/null 2>&1
        EXISTS="" # Clear the flag so installation proceeds
        echo -e "${GREEN} Existing container removed.${NC}"
    else
        echo -e "${RED} Installation aborted. Please remove the existing container or choose a different name.${NC}"
        # Display info about the existing container if possible
        ACTUAL_HOST_CONFIG_DIR=$(docker inspect --format='{{range .Mounts}}{{if eq .Destination "'"$APP_CONTAINER_CONFIG_DIR"'"}}{{.Source}}{{end}}{{end}}' "$CONTAINER_NAME" 2>/dev/null)
        if [ -z "$ACTUAL_HOST_CONFIG_DIR" ]; { ACTUAL_HOST_CONFIG_DIR="<unknown, check manually>"; } fi
        
        # Attempt to get the currently mapped host port
        CURRENT_HOST_PORT=$(docker inspect --format='{{(index (index .HostConfig.PortBindings "'"$APP_CONTAINER_PORT/tcp"'") 0).HostPort}}' "$CONTAINER_NAME" 2>/dev/null)
        if [ -z "$CURRENT_HOST_PORT" ]; then { CURRENT_HOST_PORT="<unknown, check manually>"; } fi

        echo
        echo -e "${BOLD} Existing Glance Container Info:${NC}"
        echo -e "- Container name: ${CYAN}$CONTAINER_NAME${NC}"
        echo -e "- Host directory for config: ${CYAN}$ACTUAL_HOST_CONFIG_DIR${NC}"
        echo -e "- Mapped Host Port: ${CYAN}$CURRENT_HOST_PORT${NC} (for container port ${APP_CONTAINER_PORT})"
        echo
        exit 1
    fi
fi


# [ Installation Logic ]
# This block will only run if $EXISTS is empty (either no container or user agreed to remove)
echo
echo -e "${BOLD}Glance container '$CONTAINER_NAME' will be installed.${NC}"

# [ Prompt for Host Config Directory ]
echo -e "\n${BOLD}Please enter the host folder for Glance configuration files (e.g., glance.yml).${NC}"
echo -e "This directory will be mapped to ${APP_CONTAINER_CONFIG_DIR} inside the container."
echo -e "You can use 'tab' to autocomplete paths."
echo -e "Leave this empty to use the default path: ${BLUE_BOLD}${DEFAULT_HOST_CONFIG_DIR}${NC}"
read -e -p "Enter Glance config path [${DEFAULT_HOST_CONFIG_DIR}]: " user_config_input
HOST_CONFIG_DIR="${user_config_input:-$DEFAULT_HOST_CONFIG_DIR}"

ensure_dir "$HOST_CONFIG_DIR"
echo -e "${GREEN} Host config directory for Glance: $HOST_CONFIG_DIR${NC}"
echo

# [ Prompt for Host Port ]
echo -e "\n${BOLD}Please enter the host port for Glance Web UI.${NC}"
echo -e "Glance listens on port ${APP_CONTAINER_PORT} inside the container."
echo -e "If port ${DEFAULT_APP_HOST_PORT} is already in use on your host, choose a different one (e.g., 8081, 8888)."
read -e -p "Enter Host Port for Glance [${DEFAULT_APP_HOST_PORT}]: " user_host_port_input
SELECTED_HOST_PORT="${user_host_port_input:-$DEFAULT_APP_HOST_PORT}"
echo -e "${GREEN} Glance will be accessible on host port: $SELECTED_HOST_PORT${NC}"
echo

# [ Download Example Config if Necessary ]
if [ ! -f "$HOST_CONFIG_DIR/glance.yml" ]; then
    echo -e "${CYAN}Glance config (glance.yml) not found in $HOST_CONFIG_DIR.${NC}"
    echo -e "${CYAN}Attempting to download example configuration files...${NC}"
    CONFIG_TARBALL_URL="https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz"
    GLANCE_YML_PATH_IN_ARCHIVE="docker-compose-template-main/config/glance.yml"
    HOME_YML_PATH_IN_ARCHIVE="docker-compose-template-main/config/home.yml"

    # Attempt to download and extract glance.yml and home.yml directly into HOST_CONFIG_DIR
    if curl -sL "$CONFIG_TARBALL_URL" | tar -xzf - -C "$HOST_CONFIG_DIR" --strip-components=2 "$GLANCE_YML_PATH_IN_ARCHIVE" "$HOME_YML_PATH_IN_ARCHIVE" >/dev/null 2>&1; then
        if [ -f "$HOST_CONFIG_DIR/glance.yml" ] && [ -f "$HOST_CONFIG_DIR/home.yml" ]; then
            echo -e "${GREEN} Downloaded example glance.yml and home.yml to $HOST_CONFIG_DIR${NC}"
            echo -e "${CYAN}Please review and customize these example configuration files as needed.${NC}"
            echo -e "${CYAN}See Glance documentation: https://glanceapp.github.io/glance/configuration/ ${NC}"
        else
            echo -e "${RED} Partial download or extraction. Some example files might be missing.${NC}"
            echo -e "${YELLOW}You may need to create glance.yml and home.yml manually in $HOST_CONFIG_DIR.${NC}"
        fi
    else
        echo -e "${RED} Failed to download or extract example Glance configuration files.${NC}"
        echo -e "${YELLOW}You will need to create glance.yml and page configs (e.g., home.yml) manually in $HOST_CONFIG_DIR.${NC}"
        echo -e "${YELLOW}Refer to Glance documentation for examples: https://glanceapp.github.io/glance/configuration/ ${NC}"
    fi
else
    echo -e "${GREEN} Existing glance.yml found in $HOST_CONFIG_DIR. Skipping example download.${NC}"
fi
echo

# [ Pull Glance Image ]
echo -e "${CYAN}Pulling Glance image ('${APP_IMAGE}')...${NC}"
docker pull ${APP_IMAGE}
if [ $? -ne 0 ]; then
    echo -e "${RED} Failed to pull Glance image. Check Docker and internet.${NC}"
    exit 1
fi

# [ Run Glance Container ]
echo -e "${CYAN}Creating and starting Glance container...${NC}"
DOCKER_CMD="docker run -d"
DOCKER_CMD+=" -p ${SELECTED_HOST_PORT}:${APP_CONTAINER_PORT}"
DOCKER_CMD+=" --name $CONTAINER_NAME"
DOCKER_CMD+=" --restart unless-stopped"
DOCKER_CMD+=" -v \"$HOST_CONFIG_DIR\":\"$APP_CONTAINER_CONFIG_DIR\":ro"
DOCKER_CMD+=" ${APP_IMAGE}"

echo -e "${YELLOW}Executing Docker command:${NC}"
echo "$DOCKER_CMD"
eval "$DOCKER_CMD"

if [ $? -ne 0 ]; then
    echo -e "${RED} Failed to start Glance container. Check Docker logs (${CYAN}docker logs $CONTAINER_NAME${RED}).${NC}"
    echo -e "${YELLOW}   Common issues: Chosen host port ${SELECTED_HOST_PORT} might be in use, or permission problems on '$HOST_CONFIG_DIR'.${NC}"
    echo -e "${YELLOW}   The Glance container runs as user 1000:1000. Ensure '$HOST_CONFIG_DIR' and its files are readable by this user.${NC}"
    echo -e "${YELLOW}   Example to fix permissions: sudo chown -R 1000:1000 \"$HOST_CONFIG_DIR\"${NC}"
    exit 1
fi
echo -e "${GREEN} Glance container '$CONTAINER_NAME' started successfully!${NC}"


# [ Post-Setup Info (Always Shown After Successful Start or if Already Exists) ]
# If the script just installed it, HOST_CONFIG_DIR and SELECTED_HOST_PORT are set.
# If it existed before, we attempt to retrieve them.
if [ ! -z "$EXISTS" ]; then # This condition means we skipped installation because it existed and user chose not to remove
    # This block is now less likely to be hit due to earlier exit if user doesn't remove
    # but keeping it for logical completeness if script structure changes
    SELECTED_HOST_PORT=$(docker inspect --format='{{(index (index .HostConfig.PortBindings "'"$APP_CONTAINER_PORT/tcp"'") 0).HostPort}}' "$CONTAINER_NAME" 2>/dev/null || echo "$DEFAULT_APP_HOST_PORT (default)")
    HOST_CONFIG_DIR=$(docker inspect --format='{{range .Mounts}}{{if eq .Destination "'"$APP_CONTAINER_CONFIG_DIR"'"}}{{.Source}}{{end}}{{end}}' "$CONTAINER_NAME" 2>/dev/null || echo "$DEFAULT_HOST_CONFIG_DIR (default)")
fi

echo
echo -e "${BOLD} Glance Container Info:${NC}"
echo -e "- Container name: ${CYAN}$CONTAINER_NAME${NC}"
echo -e "- Host directory for config: ${CYAN}$HOST_CONFIG_DIR${NC}"
echo -e "  (Mapped to ${YELLOW}$APP_CONTAINER_CONFIG_DIR${NC} inside container, mounted read-only)"
echo -e "- Glance Web UI (HTTP): Port ${CYAN}${SELECTED_HOST_PORT}${NC}"
echo
echo -e "${BOLD} Configuration:${NC}"
echo -e "Glance is configured using YAML files (e.g., ${UNDERLINE}glance.yml${NC}, ${UNDERLINE}home.yml${NC}) located in:"
echo -e "  ${CYAN}$HOST_CONFIG_DIR${NC}"
echo -e "Refer to Glance docs: ${YELLOW}https://glanceapp.github.io/glance/configuration/${NC}"
echo
echo -e "${BOLD} Access Glance Web UI:${NC}"
echo -e "  Open your browser: ${YELLOW}http://${DISPLAY_HOST_IP}:${SELECTED_HOST_PORT}${NC}"
echo
echo -e "${BOLD} Common Docker Commands:${NC}"
echo -e "  ${CYAN}docker start|stop|restart $CONTAINER_NAME${NC}"
echo -e "  ${CYAN}docker logs -f $CONTAINER_NAME${NC}"
echo -e "  ${CYAN}docker rm $CONTAINER_NAME${NC} (config in ${HOST_CONFIG_DIR} is preserved)"
echo
echo -e "${BOLD} Next Steps:${NC}"
echo -e "  1. Customize ${CYAN}$HOST_CONFIG_DIR/glance.yml${NC} and ${CYAN}$HOST_CONFIG_DIR/home.yml${NC} (if examples were downloaded)."
echo -e "  2. Restart Glance (${CYAN}docker restart $CONTAINER_NAME${NC}) after changing ${CYAN}glance.yml${NC}."
echo

exit 0

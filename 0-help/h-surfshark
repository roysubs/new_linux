#!/bin/bash
if ! command -v mdcat >/dev/null 2>&1; then echo "Install mdcat to render markdown."; fi

cat <<'EOF' | mdcat | less -R

# Surfshark VPN on Headless Debian for qBittorrent-nox

This guide provides a concise set of commands and notes for installing and using the Surfshark command-line interface (CLI) client on a headless Debian system to anonymize all traffic, particularly for use with qBittorrent-nox.

**Prerequisites:**

* A headless Debian system (accessed via SSH or similar).
* An active Surfshark subscription.

**Installation (using APT repository):**

```bash
# Add the Surfshark repository key
wget -qO - [https://repo.surfshark.com/surfshark.gpg](https://repo.surfshark.com/surfshark.gpg) | sudo apt-key add -

# Add the Surfshark repository to your sources list
echo "deb [https://repo.surfshark.com/debian](https://repo.surfshark.com/debian) stable main" | sudo tee /etc/apt/sources.list.d/surfshark.list

# Update your package lists
sudo apt update

# Install the Surfshark CLI client
sudo apt install surfshark-cli
```

# Logging In:
```bash
surfshark login
# Follow the prompts to enter your email and password or authenticate via the website.

# Connecting to a Surfshark Server:
# List available servers (optional)
surfshark server list

# Connect to the fastest server
surfshark connect

# Connect to a specific country (e.g., US)
surfshark connect US

# Connect to a specific city (e.g., New York)
surfshark connect New York

# Connect using a specific server code (from 'server list')
surfshark connect us-nyc-c01
```

# Checking Connection Status:
```bash
surfshark status

# Disconnecting:
surfshark disconnect
```

# Other Useful Commands:
```bash
# Enable the Kill Switch (blocks internet if VPN disconnects)
surfshark killswitch on

# Disable the Kill Switch
surfshark killswitch off

# Connect to a MultiHop location (e.g., entry in NL, exit in US)
surfshark connect --multihop NL US

# List available MultiHop locations
surfshark multihop list

# Log out of the Surfshark client
surfshark logout
Integrating with qBittorrent-nox (Recommended):
```

To ensure qBittorrent-nox traffic is only routed through the VPN, you can bind it to the VPN interface.

Identify the VPN Interface: After connecting to Surfshark, find the VPN interface name (e.g., tun0, wg0) using:

Bash

ip a
Look for an interface with an IP address in a private range (like 10.x.x.x) and a name possibly containing "tun" or "wg".

Edit qBittorrent Configuration: Open the qBittorrent configuration file (usually at ~/.config/qBittorrent/qBittorrent.conf) using a text editor:

Bash

nano ~/.config/qBittorrent/qBittorrent.conf
Find or Add BindAddress: Locate the [Network] section and find the BindAddress setting. If it doesn't exist, add it:

Ini, TOML

[Network]
BindAddress=tun0  # Replace 'tun0' with your actual VPN interface name
Save and Restart qBittorrent-nox: Save the configuration file and restart the qBittorrent-nox service:

Bash

sudo systemctl restart qbittorrent-nox
Verifying the VPN Connection:

Check your external IP address: Use curl ifconfig.me in the terminal. It should show the IP address of the Surfshark server, not your actual IP.
Use Surfshark's IP and DNS leak test: Visit the official Surfshark website and look for their IP leak and DNS leak test tools to ensure your connection is secure.
Important Notes for Headless Systems:

All interactions with Surfshark will be through the command line.
Ensure you are using the surfshark-cli package, not a GUI version.
Binding qBittorrent-nox to the VPN interface is a crucial step for headless systems to prevent leaks if the VPN connection drops.
This file provides a quick reference for managing your Surfshark VPN connection on your headless Debian system. Remember to consult the official Surfshark documentation for the most up-to-date information and advanced configurations.

EOF

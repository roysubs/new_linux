#!/bin/bash

# Display help summary for Vim
cat <<'EOF' | glow -p -w $(( $(tput cols) - 6 ))
Vim Quick Notes
===============

- **Neovim vs Vim**:
    - Neovim (nvim) is a more modern version of Vim, with better support for plugins and features.
    - Example: In Neovim, try `:%s/Text/Replace/` to see live previews of replacements across all affected lines.

- **Breaking Out to Shell**:
    - **Ctrl+Z**: Suspends Vim (or any app) and sends it to the background. Use `fg` to bring it back.
    - **:sh**: Opens a new shell inside Vim. Use `Ctrl+D` to exit the shell (if opened with `:sh`).
    - **Note**: If not in a shell, `:sh` won't exit Vim/Neovim.

- **Copying Text Between Files**:
    - Select text using `10yy` to yank (copy) 10 lines, then:
      1. Open file2: `:e file2`
      2. Paste the text: `p`
      3. Go back to file1: `:e file1`
    - Alternatively, use `:split filename` or `:vsplit filename` to open a new file in a split window and use `Ctrl-w` to navigate between splits.

- **Opening Another File**:
    - `:e filename`: Open another file and replace the current buffer.
    - `:split filename` / `:vsplit filename`: Open the new file in a split window, keeping the current file visible.

- **Vim Modes**:
    - **Normal Mode**: Navigate and manipulate text.
    - **Insert Mode**: Insert text.
    - **Visual Modes**: Select regions of text.
    - **Command-line Mode**: Perform commands like `:w`, `:%s/text/replace/g`, etc.
    - **Paste Mode**: Use `:set paste` to temporarily disable auto-indentation and text formatting when pasting text.

- **Quick Basics**:
    - In **Normal Mode**: Use `h`, `j`, `k`, `l` for navigation (or arrow keys).
    - In **Insert Mode**: Use arrow keys, PgUp/PgDn to navigate.
    - `dd`: Delete a line (into the buffer), `yy`: Yank a line, `p`: Paste the buffer.

- **Visual Mode and Select**:
    - `v`: Enter visual mode at the cursor position; move with arrow keys or `^`/`$` to select text.
    - `V`: Select the whole line in visual mode.
    - `Ctrl+v` (or `Ctrl+q`): Block select multiple lines. Use `d` to delete, `I` to insert text across all selected lines.
    - To append text to the end of multiple lines:
      1. `Ctrl+v` (or `Ctrl+q`) to select lines.
      2. `$` to go to the end of the lines.
      3. `A` to append, type the text, then press `Esc` to apply.

- **Navigation**:
    - `gg`: Go to the start of the first line.
    - `G`: Go to the last line. `123G`: Go to line 123.
    - `dG`: Delete from the current cursor position to the end of the file. `yG`: Yank to the end of the file.
    - `dgg`: Delete from the cursor to the start of the file. `ygg`: Yank from the cursor to the start.
    - `0`: Go to the start of the current line. `$`: Go to the end of the line.
    - `w`: Jump forward a word, `b`: Jump backward a word, `e`: Go to the end of the current word.
    - `Ctrl+f`: Page forward, `Ctrl+b`: Page backward.

- **Deleting Words and Lines**:
    - Insert Mode:
        - `Ctrl+W`: Delete the word before the cursor.
        - `Ctrl+U`: Delete the word after the cursor.
        - `Shift+D`: Delete from the cursor to the end of the line.
    - Normal Mode:
        - `dw`: Delete a word after the cursor.
        - `daw`: Delete the word around the cursor.
        - `d$` or `D`: Delete to the end of the line.
        - `d^`: Delete to the start of the line.
        - `d5j`: Delete 5 lines down, `dG`: Delete from the cursor to the end of the file.

- **Yanking (Copying) and Pasting**:
    - `y`: Yank text (copy) into the buffer.
    - `p`: Paste the buffer at the cursor position.
    - Use `d` to delete text (which is also yanked into the buffer), and then use `p` to paste.

- **Advanced Deleting**:
    - `ggdG`: Delete everything from the start of the file to the end.
    - `dgg`: Delete from the current position to the start of the file.
    - `d/^fi/+1`: Delete lines matching a pattern (e.g., `fi` for `if-fi` block).

EOF


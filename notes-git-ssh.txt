# git-ssh-authentication.sh

"How to generate an SSH keypair to use with GitHub"

# Create the keypair (could use RSA instead, leave passphrase blank)
ssh-keygen -t ed25519 -C roysubs@hotmail.com
# Startup our ssh agent (will return, e.g., Agent pid 7693
eval "$(eval ssh-agent -s)"

# Add our private key to the ssh agent (i.e., we will put the ID into our wallet)
vi ~/.ssh/config
```
Host *
    AddKeysToAgent yes
	IdentityFile ~/.ssh/id_ed25519
```
# If we use a passphrase and want it to be stored
# If you are using a passphrase, add this line (don't add it if no passphrase)
#    UseKeychain yes
# Note that if on Windows, you don't have to create or populate the file. 
# Run ssh-add to 
ssh-add ~/.ssh/id_ed25519
#   Identity added: /home/boss/.ssh/id_ed25519 (roysubs@hotmail.com)
# Get the public key from the terminal with:
cat ~/.ssh/id_25519.pub

# Now go to a webbrowser and open github.com
# Login and go to Settings > Left-sidebar 'SSH and GPG keys'
# Press the 'New SSH key' button, add a title.
# Add the contents of id_25519.pub to the main body and save.
 
# On the termina, autheticate the key to check if it's working
ssh -T git@github.com
# Output: Hi roysubs! You've successfully authenticated, but GitHub does not provide shell access.

Go to a repo, and select the green "Code" button
In the dropdown, the options are, HTTPS, SSH, Github CLI
Select SSH
   git@github.com:roysubs/new_linux.git
In terminal:
git clone git@github.com:roysubs/new_linux.git
cd new_linux
git remote -v
After the above, everything is authenticated with SSH so git push etc will work normally.


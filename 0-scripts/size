#!/bin/bash

count=false
path="."
xdev_flag="-x"

# Help message
show_help() {
    echo "
Usage: size [-c] [path]

  Without arguments, shows the size of the current directory (excluding other mounted filesystems).

Options:
  -c    Also count the number of files and directories.
  -h    Show this help message.

Examples:
  size             → Show size of current directory
  size -c /mnt     → Show size + counts of /mnt
"
}

# Parse arguments
for arg in "$@"; do
    case "$arg" in
        -h)
            show_help
            exit 0
            ;;
        -c)
            count=true
            ;;
        -*)
            echo "Invalid option: $arg" >&2
            exit 1
            ;;
        *)
            if [[ "$path" == "." ]]; then
                path="$arg"
            else
                echo "Error: Multiple paths provided. Please specify only one directory." >&2
                exit 1
            fi
            ;;
    esac
done

# Resolve absolute path
path=$(realpath "$path")
start_time=$(date +%s.%N)

# Validate path
if [[ -f "$path" ]]; then
    echo "'$path' is a file, not a directory."
    exit 1
elif [[ ! -d "$path" ]]; then
    echo "size: Warning: '$path' is not a directory"
    exit 1
fi

# Try to get size info, handling permission issues
size_info=$(du -sh $xdev_flag "$path" 2>/dev/null | awk '{print $1}')

if [[ -z "$size_info" ]]; then
    size_info="Permission denied or inaccessible"
fi

# Disk usage from df
df_output=$(df -h "$path" 2>/dev/null | tail -n 1)
device=$(echo "$df_output" | awk '{print $1}')
size=$(echo "$df_output" | awk '{print $2}')
used=$(echo "$df_output" | awk '{print $3}')
available=$(echo "$df_output" | awk '{print $4}')
use_percent=$(echo "$df_output" | awk '{print $5}')

# Optional counting
if [ "$count" = true ]; then
    dir_count=$(find "$path" -xdev -type d 2>/dev/null | wc -l | awk '{printf "%'\''d\n", $1}')
    file_count=$(find "$path" -xdev -type f 2>/dev/null | wc -l | awk '{printf "%'\''d\n", $1}')
    echo "$path is ${size_info} (with $file_count files, $dir_count directories)"
else
    echo "$path is ${size_info}"
fi

echo "Located on $device, $use_percent used ($used of $size)"

# Time taken
end_time=$(date +%s.%N)
elapsed_time=$(echo "$end_time - $start_time" | bc)
elapsed_time=$(printf "%.1f" "$elapsed_time")
if (( $(echo "$elapsed_time >= 10" | bc -l) )); then
    echo "(Script ran for ${elapsed_time}s)"
fi


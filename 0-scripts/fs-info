#!/bin/bash

# fs: Display useful filesystem information
# This script combines the output of /etc/fstab and lsblk, with additional information on how to interpret it.

# ANSI color codes for better readability
YELLOW='\e[1;33m' # Section headers
GREEN='\e[1;32m'  # Explanations
CYAN='\e[1;36m'   # Field names
RED='\e[1;31m'    # Errors/Warnings
NC='\e[0m'        # No colour / reset color

FSTAB_FILE="/etc/fstab"

# Check if lsblk is available
if ! command -v lsblk &> /dev/null; then
    echo "Error: lsblk command not found. Please install it."
    exit 1
fi

# Check if awk is available
if ! command -v awk &> /dev/null; then
    echo "Error: awk command not found. Please install it."
    exit 1
fi

# Check if /etc/fstab exists
if [ ! -f /etc/fstab ]; then
    echo "Error: /etc/fstab file not found."
    exit 1
fi

# --- Display fstab entries in a table ---
echo
echo -e "${YELLOW}--- fstab Entries ---${NC}"
echo

# Prepare the header lines and the fstab entries for column -t
# We use a subshell { ... } to group the echo commands and the cat/grep/awk pipeline
# The output of the subshell is then piped to column -t
{
    # Echo the header lines
    echo "DEVICE MOUNT_POINT TYPE OPTIONS DUMP PASS"
    echo "------ ----------- ---- ------- ---- ----"
    # Read /etc/fstab, filter comments/empty lines, and format with awk
    # Awk ensures exactly 6 fields are passed, even if optional fields are missing
    # We use printf in awk to ensure a single space delimiter between fields
    cat "$FSTAB_FILE" | grep -vE '^[[:space:]]*#|^[[:space:]]*$' | awk '{ printf "%s %s %s %s %s %s\n", $1, $2, $3, $4, $5, $6 }' | sort
} | column -t -s ' ' # Pipe the combined output (headers + entries) to column -t, using space as delimiter

# Provide an explanation of /etc/fstab columns
echo
echo "Where:"
echo "  DEVICE          - The device, partition, or swap file (e.g., /dev/sda1, UUID=xxxxxx)"
echo "  MOUNT_POINT     - The directory where the device is mounted (e.g., /, /home)"
echo "  FILESYSTEM_TYPE - The type of filesystem (e.g., ext4, xfs, ntfs, swap)"
echo "  OPTIONS         - Mount options (e.g., defaults, noatime, ro)"
echo "  DUMP            - Used by the dump utility; usually 0 or 1 (0 means no dump)"
echo "  PASS            - Determines the order in which fsck checks filesystems at boot (0 means no check)"

# Display lsblk output with specific filters
echo
echo -e "${YELLOW}--- lsblk NAME,FSTYPE,FSSIZE,FSAVAIL,FSUSED,FSUSE%,UUID,MOUNTPOINT, with filters (-e 1,7,11,253) ---${NC}"
echo
lsblk -o NAME,FSTYPE,FSSIZE,FSAVAIL,FSUSED,FSUSE%,UUID,MOUNTPOINT -lp -e 1,7,11,253 | awk 'NR==1 || NF > 1'

# # Display additional disk usage and filesystem stats
# echo
# echo -e "${YELLOW}--- Disk Usage with df ---${NC}"
# echo 
# df -hT --total | grep -v -E '^tmpfs|^/dev/loop|squashfs'  # Show disk usage with human-readable sizes and file system types

# Display inode usage
echo
echo -e "${YELLOW}Inode Usage${NC}"
echo
df -ih --total | grep -v '^tmpfs|loop'  # Inode usage (useful for filesystems that may run out of inodes)

# Display mounted filesystems and their stats
echo
echo -e "${YELLOW}Mounted Filesystems${NC}"
echo

echo "SOURCE ON TARGET TYPE FSTYPE OPTIONS"
echo "====== == ====== ==== ====== ======="

echo "Column	Description
echo "SOURCE	The device or source of the mount (e.g., /dev/sda1)
echo "ON	Literal word "on" (part of the format)
echo "TARGET	The mount point (e.g., /mnt/sda1)
echo "TYPE	Literal word "type" (part of the format)
echo "FSTYPE	Filesystem type (e.g., ext4, hugetlbfs)
echo "OPTIONS	Mount options in parentheses
echo "mount | grep -vE '/sys|/proc|^udev|^devpts|^tmpfs|^mqueue|/run|/docker|/snap' |column -t
# mount | grep -v '/snap|/docker' | column -t  # Show mounted filesystems in a clean columnar format

# Optional: Show swap usage if applicable
if [ "$(swapon --show)" ]; then
    echo
    echo -e "Swap Information\n================"
    swapon --show
else
    echo
    echo -e "No swap devices found."
fi

# Optional: Check for active LVM (Logical Volume Management) volumes
if command -v lvs &> /dev/null; then
    echo
    echo -e "LVM Volumes\n============"
    lvs
else
    echo
    echo -e "LVM command not found, skipping LVM volume display."
fi

# Optional: Show ZFS status (if ZFS is installed)
if command -v zfs &> /dev/null; then
    echo
    echo -e "ZFS Filesystems\n================"
    zfs list
else
    echo
    echo -e "ZFS command not found, skipping ZFS filesystem display."
fi

# Exit script with success
exit 0


#!/bin/bash

# ANSI color codes
GREEN='\033[0;32m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Function to display command and wait for keypress if --cmd is used
run_with_cmd_display() {
    if [[ "$SHOW_CMD" == "true" ]]; then
        echo -e "${GREEN}$1${NC}"
        echo -e "${WHITE}Press any key to run the command${NC}"
        read -n 1 -s
    fi
    eval "$1"
}

# Function to display usage
usage() {
    cat << EOF
Usage: f [OPTION] [ARGUMENTS]

A versatile find utility with various common and complex find operations.

Options:
  -b, --biggest         Find the largest files in the specified directory
  -n, --newest          Find the newest files in the specified directory
  -o, --oldest          Find the oldest files in the specified directory
  -e, --empty           Find empty files and directories
  -t, --type TYPE       Find files of specific type (f=file, d=directory, l=link)
  -s, --name NAME       Find files by name pattern
  -i, --iname NAME      Find files by case-insensitive name pattern
  -p, --perm PERM       Find files with specific permissions
  -u, --user USER       Find files owned by specific user
  -g, --group GROUP     Find files owned by specific group
  -m, --modified DAYS   Find files modified within DAYS days
  -a, --accessed DAYS   Find files accessed within DAYS days
  -x, --exec CMD        Find files and execute command on them
  -d, --depth DEPTH     Find files up to specified depth
  -r, --regex REGEX     Find files matching regex pattern
  -z, --size SIZE       Find files by size (e.g., +100M, -500k)
  --cmd                 Show the command before executing
  -h, --help            Display this help and exit

Examples:
  f -b /path/to/dir 10      # Show 10 biggest files in /path/to/dir
  f -n . 5                  # Show 5 newest files in current directory
  f -s "*.txt"              # Find all .txt files
  f -t f -m 7               # Find files modified in last 7 days
  f --cmd -b . 5            # Show command before finding 5 biggest files
EOF
    exit 0
}

# Check if no arguments provided
if [ $# -eq 0 ]; then
    usage
fi

# Default values
DIR="."
COUNT=10
SHOW_CMD="false"

# Check for --cmd anywhere in arguments
for arg in "$@"; do
    if [[ "$arg" == "--cmd" ]]; then
        SHOW_CMD="true"
        break
    fi
done

# Parse options
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            usage
            ;;
        --cmd)
            shift
            ;;
        -b|--biggest)
            shift
            if [[ "$1" =~ ^[0-9]+$ ]]; then
                COUNT=$1
                shift
            fi
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -exec ls -l --block-size=1 {} + | sort -nr -k 5 | head -n $COUNT"
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -n|--newest)
            shift
            if [[ "$1" =~ ^[0-9]+$ ]]; then
                COUNT=$1
                shift
            fi
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -printf '%TY-%Tm-%Td %TH:%TM:%TS %p\\n' | sort -nr | head -n $COUNT"
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -o|--oldest)
            shift
            if [[ "$1" =~ ^[0-9]+$ ]]; then
                COUNT=$1
                shift
            fi
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -printf '%TY-%Tm-%Td %TH:%TM %p\\n' | sort -n | head -n $COUNT"
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -e|--empty)
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -empty"
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -t|--type)
            shift
            TYPE="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type \"$TYPE\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -s|--name)
            shift
            NAME="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -name \"$NAME\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -i|--iname)
            shift
            NAME="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -iname \"$NAME\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -p|--perm)
            shift
            PERM="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -perm \"$PERM\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -u|--user)
            shift
            USER="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -user \"$USER\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -g|--group)
            shift
            GROUP="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -group \"$GROUP\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -m|--modified)
            shift
            DAYS="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -mtime -\"$DAYS\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -a|--accessed)
            shift
            DAYS="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -atime -\"$DAYS\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -x|--exec)
            shift
            EXEC="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -exec $EXEC {} \;"
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -d|--depth)
            shift
            DEPTH="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -maxdepth \"$DEPTH\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -r|--regex)
            shift
            REGEX="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -regex \"$REGEX\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        -z|--size)
            shift
            SIZE="$1"
            shift
            [[ -n "$1" && ! "$1" =~ ^- ]] && DIR="$1" && shift
            CMD="find \"$DIR\" -type f -size \"$SIZE\""
            run_with_cmd_display "$CMD"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            usage
            ;;
    esac
done

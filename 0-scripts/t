#!/bin/bash
# TMUX Tool Script ("t")
# Unified wrapper for commonly used tmux commands with colorful output and aliases.

# Colors
BLUE='\033[1;34m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

print_line() {
    echo -e "${BLUE}=====${NC}"
}

color_echo() {
    echo -e "${GREEN}$1${NC}"
}

# Removed:
#  b             ${BLUE}byobu${NC} | Start tmux with byobu

help_text() {
    printf "Tmux Wrapper.   Usage: t [option]
Options:
  list          List buffers, clients, panes, sessions, windows
  t|s|start     Start tmux, 't t', 't s', 't start'; ${BLUE}tmux${NC}
  a <name>      Attach to session <name> (or to last session if no name); ${BLUE}tmux attach-session -t <name>${NC}
  d             Detach from current session; ${BLUE}tmux detach${NC}A
  f|b           Switch panes (f for forwards, b for backwards); ${BLUE}tmux select-pane -t :.+${NC} (:.- for backwards)
  sh            Split Horizontal (create pane, split line is top to bottom)
  sv            Split Vertical (create pane, split line is left to right)
  sg            Split Grid (create panes to form a 2x2 grid)
  rl|rr|ru|rd   Resize current pane (L/R/U/D)
  copy          Enter copy mode
  mouse         Toggle mouse mode (if 'off', copy mode will span multiple panes)
    on:  Left-click on a pane to switch to pane; on pane-divider to drag-resize
         Left-click to select text in a pane (then use 'C-b ]' to paste)
         Right-click context-sensitive menu
    off: Mouse-wheel will scroll console history
  panes         Flash up the pane numbers, and show details in console
  ren <name>    Rename session
  swi <name>    Switch to session
  k             ${BLUE}tmux kill${NC} | Kill current tmux pane
  hk            Help summary of common key binding defaults and some commands
  hb            Help summary of common byobu features
  help          Show tmux commands and key bindings (paged)
  cmds          List tmux commands
  keys          List tmux key bindings
  -h, --help    Show this help menu

"
}

case "$1" in
    ""|-h|--help)
        help_text
        ;;

    list)
        color_echo "tmux list-buffers"
        tmux list-buffers
        color_echo "tmux list-clients..."
        tmux list-clients
        color_echo "tmux list-panes..."
        tmux list-panes
        color_echo "tmux list-sessions..."
        tmux list-sessions
        color_echo "tmux list-windows..."
        tmux list-windows
        ;;

    s)
        color_echo "Starting tmux..."
        tmux
        ;;

#     b)
#         color_echo "Starting byobu..."
#         byobu
#         ;;

    k)
        read -rp "Are you sure you want to kill the current tmux pane? [y/N]: " confirm
        if [[ $confirm == [yY] ]]; then
            color_echo "Killing current tmux pane..."
            tmux kill-pane
        else
            color_echo "Aborted. Tmux pane not killed."
        fi
        ;;
    copy)
        tmux copy-mode
        ;;

    sh)
        if [ -z "$TMUX" ]; then
            tmux new-session -d -c "$PWD"
            tmux split-window -h -c "$PWD"
            tmux attach
        else
            tmux split-window -h -c "#{pane_current_path}"
        fi
        ;;

    sv)
        if [ -z "$TMUX" ]; then
            tmux new-session -d -c "$PWD"
            tmux split-window -v -c "$PWD"
            tmux attach
        else
            tmux split-window -h -c "#{pane_current_path}"
        fi
        ;;

    sg)
        if [ -z "$TMUX" ]; then
            tmux new-session -d -c "$PWD"
            tmux attach
            exit
        fi
    
        tmux split-window -h -c "#{pane_current_path}"     # split right
        tmux select-pane -L                               # move back to left pane
        tmux split-window -v -c "#{pane_current_path}"     # split bottom of left
        tmux select-pane -R                               # move to right pane
        tmux split-window -v -c "#{pane_current_path}"     # split bottom of right
        ;;

    f)
        tmux select-pane -t :.+
        ;;

    b)
        tmux select-pane -t :.-
        ;;

    rl) tmux resize-pane -L 5 ;;
    rr) tmux resize-pane -R 5 ;;
    ru) tmux resize-pane -U 5 ;;
    rd) tmux resize-pane -D 5 ;;

    ren)
        shift
        tmux rename-session "$1"
        ;;

    swi)
        shift
        tmux switch-client -t "$1"
        ;;

    a|at|att|attach)
        if [ -n "$2" ]; then
            tmux attach-session -t "$2"
        else
            tmux attach
        fi
        ;;

    d|de|det|detach)
        tmux detach
        ;;

    mouse)
        current_status=$(tmux show -g mouse | awk '{print $2}')
        if [ "$current_status" = "on" ]; then
            tmux set -g mouse off
            echo -e "Mouse mode turned ${RED}off${NC}."
        else
            tmux set -g mouse on
            echo -e "Mouse mode turned ${GREEN}on${NC}."
        fi
        ;;

    panes)
        tmux list-panes
        tmux display-panes
        ;;
    
    cmds)
        tmux list-commands | less
        ;;

    keys)
        tmux list-keys | less
        ;;

    help)
        echo -e "${BLUE}TMUX COMMANDS${NC}\n"
        tmux list-commands
        print_line
        echo -e "${BLUE}TMUX KEY BINDINGS${NC}\n"
        tmux list-keys | less
        ;;
    hk)
        printf '\033[1;33m  *** Default tmux Key Bindings ***\033[0m
  First press \033[1;36mC-b\033[0m (Ctrl+b), then one of the following:

\033[1;33m  Splits & Panes                   Navigation\033[0m
  \033[1;36m"\033[0m   : Split horizontally         \033[1;36mo / ;\033[0m     : Next / Last pane
  \033[1;36m%%\033[0m   : Split vertically           \033[1;36mArrow keys\033[0m: Move between panes
  \033[1;36m!\033[0m   : Break pane into window     \033[1;36mCtrl+Arrow\033[0m: Resize pane
  \033[1;36mx\033[0m   : Kill current pane          \033[1;36mCtrl+Space\033[0m: Cycle layouts
  \033[1;36mz\033[0m   : Toggle zoom (fullscreen)   

\033[1;33m  Windows & Sessions               Copy Mode\033[0m
  \033[1;36mc\033[0m   : Create new window          \033[1;36m[\033[0m     : Copy mode (PgUpDn+cursors to move)
  \033[1;36mn / p\033[0m : Next / Prev window         then \033[1;36mSpace\033[0m to start selection
  \033[1;36m,\033[0m   : Rename window                then \033[1;36mEnter\033[0m to copy highlighted to buffer
  \033[1;36m&\033[0m   : Kill window                \033[1;36m]\033[0m     : Paste buffer
  \033[1;36mw\033[0m   : Choose window
  \033[1;36ms\033[0m   : List sessions

\033[1;33m  Mouse & Buffers                  Miscellaneous\033[0m
  \033[1;36m:\033[0m   : Open command prompt
  \033[1;36m:show-buffer\033[0m                     \033[1;36md\033[0m : Detach from session
  \033[1;36m:save-buffer ~/out.txt\033[0m           \033[1;36m?\033[0m : List all key bindings
  \033[1;36m:list-buffers\033[0m                    \033[1;36mt\033[0m : Show clock
  \033[1;36m:clear-history\033[0m                   \033[1;36mr\033[0m : Reload config

\033[1;33m  Mouse Usage (optional, but very useful)\033[0m
  \033[1;36m:set -g mouse on\033[0m   : Enable mouse mode (click, resize splits, scroll)
  \033[1;36m:set -g mouse off\033[0m  : Disable mouse mode (back to keyboard only)
  Useful key binding to easily toggle mouse on/off:
  \033[1;36mbind m set -g mouse \; display-message "Mouse mode: #{?mouse,on,off}"\033[0m
\033[1;33m  To add this to your config:\033[0m \033[1;36mvi ~/.tmux.conf\033[0m
  Then reload with \033[1;36mC-b r\033[0m or \033[1;36m:source-file ~/.tmux.conf\033[0m

  For full list: \033[1;36mC-b ?\033[0m or run \033[1;36m"t help"\033[0m inside tmux
'
        ;;

hb)
        printf '\033[1;33m  *** Byobu: An Enhanced Terminal Environment ***\033[0m
  Byobu is a wrapper around GNU Screen or tmux, with useful keybindings, automatic session
  management (auto-start/attach on login), and system info bar.
  Defaults to preferring \033[0;32mtmux\033[0m if available. Use \033[0;32mbyobu-config\033[0m to change.
  It chooses based on byobu configuration (\033[0;32m~/.byobu/\033[0m) and which multiplexers are installed.
  \033[1;33mTo Start:\033[0m \033[0;32mbyobu\033[0m   To install: sudo apt install byobu, etc.)

\033[1;33m  Default Key Bindings:\033[0m
  (Bindings may vary slightly based on Byobu version and backend)

  \033[1;33mWindows                          Panes\033[0m
  \033[1;36mF2\033[0m       : New window            \033[1;36mShift-F2\033[0m : Split horizontally
  \033[1;36mF3/F4\033[0m    : Prev/Next window      \033[1;36mCtrl-F2\033[0m  : Split vertically
  \033[1;36mSh-F3/F4\033[0m : Move window L/R       \033[1;36mShift-Left/Right/Up/Down\033[0m: Navigate panes
  \033[1;36mF8\033[0m       : Rename window         \033[1;36mCtrl-Left/Right/Up/Down\033[0m: Resize pane
  \033[1;36mF10\033[0m      : Exit Byobu/window     \033[1;36mCtrl-D\033[0m   : Close pane/shell

  \033[1;33mSessions                         Miscellaneous\033[0m
  \033[1;36mShift-F1\033[0m: Show help/keys         \033[1;36mF5\033[0m      : Refresh status
  \033[1;36mF6\033[0m      : Detach                 \033[1;36mF7\033[0m      : Enter scrollback (Copy mode)
  \033[1;36mShift-F6\033[0m: Attach to session      \033[1;36mF9\033[0m      : Configuration menu
  \033[1;36mCtrl-F6\033[0m : Kill session           \033[1;36mCtrl-L\033[0m   : Clear screen
'
        ;;

    *)
        echo -e "${RED}Unknown option: $1${NC}\n" >&2
        help_text
        exit 1
        ;;
esac


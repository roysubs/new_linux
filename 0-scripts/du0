#!/bin/bash

TARGET="."
SHOW_COUNTS=false
SHOW_ACTUAL=false

for arg in "$@"; do
    case "$arg" in
        -c) SHOW_COUNTS=true ;;
        -actual) SHOW_ACTUAL=true ;;
        -h|--help)
            echo "Usage: $(basename $0) [options] [directory]"
            echo "  -c         Show number of files and subdirectories"
            echo "  -actual    Show actual disk usage (default: apparent)"
            echo "  -h         Show this help"
            exit 0 ;;
        -*)
            echo "Unknown option: $arg"
            exit 1 ;;
        *) TARGET="$arg" ;;
    esac
done

FULL_TARGET=$(realpath "$TARGET")

if [[ ! -d "$TARGET" ]]; then
    echo "Error: '$TARGET' is not a directory."
    exit 1
fi

human_readable() {
    local size=$1
    if ((size < 1024)); then
        echo "${size} B"
    elif ((size < 1048576)); then
        echo "$((size / 1024)) KB"
    elif ((size < 1073741824)); then
        echo "$((size / 1048576)) MB"
    else
        echo "$((size / 1073741824)) GB"
    fi
}

echo "Calculating directory sizes in: $FULL_TARGET"
[[ "$SHOW_ACTUAL" == true ]] && echo "(using actual disk usage)" || echo "(using apparent size)"

# Get sizes
DU_OPTS="-sb"
[[ "$SHOW_ACTUAL" != true ]] && DU_OPTS+=" --apparent-size"

mapfile -t DIR_SIZES < <(find "$TARGET" -mindepth 1 -maxdepth 1 -type d -exec du $DU_OPTS {} + | sort -nr)

longest_name=0
max_size=0
total_dirs_size=0

for entry in "${DIR_SIZES[@]}"; do
    size=$(awk '{print $1}' <<< "$entry")
    dir=$(awk '{$1=""; sub(/^ /,""); print}' <<< "$entry")
    basename=$(basename "$dir")

    (( ${#basename} > longest_name )) && longest_name=${#basename}
    (( size > max_size )) && max_size=$size
    (( total_dirs_size += size ))
done

BAR_MAX_WIDTH=$(( $(tput cols) - longest_name - 30 ))
[[ "$SHOW_COUNTS" == true ]] && BAR_MAX_WIDTH=$((BAR_MAX_WIDTH - 20))

[[ "$SHOW_COUNTS" == true ]] && printf "%-*s  %8s  %8s  %8s\n" $((longest_name + 2)) "Directory" "Size" "Files" "Dirs"

for entry in "${DIR_SIZES[@]}"; do
    size=$(awk '{print $1}' <<< "$entry")
    dir=$(awk '{$1=""; sub(/^ /,""); print}' <<< "$entry")
    basename=$(basename "$dir")
    human_size=$(human_readable "$size")

    num_files="-"
    num_dirs="-"
    if $SHOW_COUNTS; then
        num_files=$(find "$dir" -type f 2>/dev/null | wc -l)
        num_dirs=$(find "$dir" -type d 2>/dev/null | wc -l)
        num_dirs=$((num_dirs - 1))
    fi

    printf "%-*s  %8s" $((longest_name + 2)) "$basename" "$human_size"
    [[ "$SHOW_COUNTS" == true ]] && printf "  %8s  %8s" "$num_files" "$num_dirs"

    bar_length=$(( (max_size > 0 ? BAR_MAX_WIDTH * size / max_size : 0) ))
    printf " %s\n" "$(printf '#%.0s' $(seq 1 $bar_length))"
done

# Loose files size
LOOSE_SIZE=$(find "$TARGET" -mindepth 1 -maxdepth 1 -type f -exec stat --format="%s" {} + | awk '{sum+=$1} END {print sum}')
HUMAN_LOOSE_SIZE=$(human_readable "$LOOSE_SIZE")
TOTAL_SIZE=$((total_dirs_size + LOOSE_SIZE))
HUMAN_TOTAL_SIZE=$(human_readable "$TOTAL_SIZE")

echo -e "\nLoose files total size: $HUMAN_LOOSE_SIZE"
echo "Total size (all subdirs + loose files): $HUMAN_TOTAL_SIZE"


#!/bin/bash
# History Tool: View command history.
# In moving this from a .bashrc function to a standalone script, this created a problem
# as the subshell the script runs in no longer has access to the parent command history
# (unless it is sourced), so we must invoke from .bashrc with a function (the function
# in .bashrc is 'h' and this script is now 'hh').

# Check if the HH_INVOCATION flag is set (i.e., invoked by the 'h' function)
if [ -z "$HH_INVOCATION" ]; then
    echo "Error: This script must be invoked via the 'h' function in .bashrc."
    exit 1
fi

HISTORY_FILE=~/.bash_history

if [ $# -eq 0 ]; then
    echo "History Tool. Usage: h [option] [arguments]"
    echo "Options:"
    echo "  clear!         Clear the history (danger; will wipe everything)"
    echo "  e              Edit the history using your default editor"
    echo "  f <string>     Search history for a specific string"
    echo "  n <number>     Show the last <number> commands"
    echo "  s              Show the full history with line numbers"
    echo "  help           Display additional helpful history tips"
    echo "  examples       Display history usage examples"
    echo ""
    exit 0
fi

option=$1
value=$2

# Function to display history with timestamps and line numbers from the file
display_history() {
    awk '
    BEGIN { FS = OFS = "\t" }
    {
        if ($0 ~ /^#/) {
            if ($1 ~ /^#[0-9]+$/) {
                timestamp = strftime("%Y-%m-%d %H:%M:%S", substr($1, 2))
            }
        } else {
            print NR, timestamp, $0
        }
    }
    ' "$HISTORY_FILE"
}

case "$option" in
    clear!)
        history -c
        echo "History cleared (wipes everything)."
        ;;
    e)
        history -w
        ${EDITOR:-vi} "$HISTORY_FILE"
        ;;
    f)
        # hexdump -C <<< "$value"  # Debugging step to check the value
        display_history | grep --color=auto "$value"  # Search directly in the formatted history output
        ;;
    n)
        display_history | tail -n "$value"  # Show the last n commands from the formatted history output
        ;;
    s)
        display_history  # Show the full history with formatted output
        ;;
    examples)
        echo "Examples of using history:"
        echo "  history 7          # Show last 7 history lines"
        echo "  !51                # Run command 51 in history"
        echo "  !!                 # Run last command"
        echo "  sudo !!            # Run last command with sudo"
        echo "  su -c \"!!\" root # Run last command as root"
        echo "  rm !(abc.txt)      # Remove everything except abc.txt"
        echo "  cp /path/file !#:1 # Expand first argument of the current line"
        ;;
    help)
        echo "History Usage and configuration variable:"
        echo "  !!                 # Run last command, often used e.g. 'sudo !!' to rerun with sudo"
        echo "  su -c \"!!\" root  # Switch user to root and run last command"
        echo "  !<number>          # Run specific command from history, e.g. !51"
        echo "  !-<number>         # Run command relative to the last command, e.g. !-3 3rd last"
        echo "  !?<string>?        # Run last command containing 'string', e.g. !?grep?"
        echo "  !*                 # Insert parameters from previous command"
        echo "    e.g. touch file1 file2 file3"
        echo "         chmod +x !*   =>   chmod +x file1 file2 file3"
        echo "    touch a.txt b.txt c.txt; echo !^; echo !:1; echo !:2; echo !:3; echo !$; echo !*"
        echo "  ^old^new           # Repeat last command, replacing 'old' with 'new'"
        echo "  history -d <num>   # Delete a specific history entry"
        echo "  HISTTIMEFORMAT=    # Temporarily clear history timestamp format"
        echo "  fc -e <editor>     # Edit the last command in the editor"
        ;;
    *)
        if [[ "$option" =~ ^[0-9]+$ ]]; then
            display_history | tail -n "$option"
        else
            echo "Invalid option. Use 'h' without arguments to see usage."
        fi
        ;;
esac


#!/bin/bash
zzz() {
    if [ -z "$1" ]; then
        declare -F
        printf "\nAll defined functions ('declare -F').\n"
        printf "'def <name>' to show definitions of functions, aliases, built-ins, and scripts.\n\n"
        return
    fi

    local pattern="$1"
    local matches=()
    local PAGER="cat"

    if command -v batcat >/dev/null 2>&1; then
        PAGER="batcat -pp -l bash"
    fi

    # Find matching functions
    while IFS= read -r func; do
        [[ -n "$func" ]] || continue
        matches+=("$func")
        echo -e "\nFunction '$func':"
        declare -f "$func" | $PAGER
    done < <(compgen -A function -- "$pattern")

    # Find matching aliases
    while IFS= read -r alias_name; do
        [[ -n "$alias_name" ]] || continue
        matches+=("$alias_name")
        echo -e "\nAlias '$alias_name':"
        alias "$alias_name" | $PAGER
    done < <(compgen -A alias -- "$pattern")

    # Find matching built-ins
    while IFS= read -r builtin_cmd; do
        [[ -n "$builtin_cmd" ]] || continue
        matches+=("$builtin_cmd")
        echo -e "\nBuilt-in Command '$builtin_cmd':"
        help "$builtin_cmd" | $PAGER
    done < <(compgen -b -- "$pattern")

    # Find matching scripts/commands (excluding directories)
    while IFS= read -r cmd; do
        local SCRIPT_PATH
        SCRIPT_PATH=$(command -v "$cmd")
        [[ -f "$SCRIPT_PATH" ]] || continue  # Ensure it's a file
        matches+=("$cmd")
        echo -e "\n'$cmd' is a script, located at '$SCRIPT_PATH':"
        $PAGER "$SCRIPT_PATH"
    done < <(compgen -c -- "$pattern")

    # If no matches found
    if [ ${#matches[@]} -eq 0 ]; then
        echo "No function, alias, built-in, or script found matching '$1'."
    fi
}


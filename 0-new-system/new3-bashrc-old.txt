# a: Fast apt, with concise history 'h' and detailed info/depends/contents 'x'
a() {
    if [ \$# -eq 0 ]; then
        echo \"Apt Tool. Usage: a [option] <package(s)>\"
        echo \"Options:\"
        echo \"  d <package(s)>  Depends: find packages that depend upon the specified package(s)\"
        echo \"  i <package(s)>  Install the specified package(s) with sudo\"
        echo \"  h               History: show install/remove/upgrade history\"
        echo \"  r <package(s)>  Remove the specified package(s) with sudo\"
        echo \"  s <package(s)>  Search for the specified package(s)\"
        echo \"  u               Update, upgrade, and autoremove packages with sudo\"
        echo \"  v <package(s)>  View info: version, dependencies, package contents, etc.\"
        return
    fi
    option=\$1; shift  # Shift to access package arguments
    case \"\$option\" in
        d) for package in \"\$@\"; do echo \"Dependencies for \$package:\"; apt-cache rdepends \"\$package\"; echo; done ;;
        i) sudo apt install \"\$@\" ;;
        h) zgrep -E '^(Start-Date|Commandline:.*(install|remove|upgrade))' /var/log/apt/history.log.1.gz |
               sed -n '/^Start-Date/{h;n;s/^Commandline: //;H;x;s/\\n/ /;p}' |
               sed -E 's|Start-Date: ||;s|/usr/bin/apt ||' |
               grep --color=auto -v 'Start-Date:' ;;
        r) sudo apt remove \"\$@\" ;;
        s) for package in \"\$@\"; do echo \"Search results for \$package:\"; apt search \"\$package\"; echo; done ;;
        u) sudo apt update && sudo apt upgrade && sudo apt autoremove ;;
        v) for package in \"\$@\"; do
               echo \"Information for '\$package' (apt info in Debian, apt show in Mint):\\n\"
               if grep --color=auto -q \"Mint\" /etc/os-release; then apt show \"\$package\"; else apt info \"\$package\"; fi; echo
               read -n 1 -s -r -p \"Press any key to show package dependencies for \$package\"; echo
               apt-cache depends \"\$package\"; echo
               read -n 1 -s -r -p \"Press any key to show package contents for \$package\"; echo
               if dpkg -s \"\$package\" > /dev/null 2>&1; then dpkg -L \"\$package\"
               else if command -v apt-file > /dev/null 2>&1; then apt-file list \"\$package\"
               else echo \"Install apt-file to view contents of a package that is not currently installed.\"; fi
               fi; echo
            done ;;
        *) echo \"Invalid option. Use 'a' without arguments to see usage.\" ;;
    esac
}
alias ai='a i'
alias av='a v'
alias ah='a h'
h() {
    if [ \$# -eq 0 ]; then
        echo \"History Tool. Usage: h [option] [arguments]\"; \\
        echo \"Options:\"; \\
        echo \"  clear!         Clear the history (danger; will wipe everything)\"; \\
        echo \"  e              Edit the history using your default editor\"; \\
        echo \"  f <string>     Search history for a specific string\"; \\
        echo \"  n <number>     Show the last <number> commands\"; \\
        echo \"  s              Show the full history with line numbers\"; \\
        echo \"  help           Display additional helpful history tips\"; \\
        echo \"\"; \\
        echo \"Examples:\"; \\
        echo \"  history 7          # Show last 7 history lines\"; \\
        echo \"  !51                # Run command 51 in history\"; \\
        echo \"  !!                 # Run last command\"; \\
        echo \"  sudo !!            # Run last command with sudo\"; \\
        echo \"  su -c \\\"!!\\\" root   # Run last command as root\"; \\
        echo \"  rm !(abc.txt)      # Remove everything except abc.txt\"; \\
        echo \"  cp /path/file !#:1 # Expand first argument of the current line\"; \\
        return;
    fi

    option=\$1
    value=\$2

    case \"\$option\" in
        clear!) history -c; echo \"History cleared (wipes everything).\" ;;
        e) history -w; \${EDITOR:-vi} ~/.bash_history ;;
        f) history | grep --color=auto \"\$value\" ;;
        n) history | tail -n \"\$value\" ;;
        s) history ;;
        help)
            echo \"Helpful History Tips:\"; \\
            echo \"  !!                 # Run last command, often used e.g. 'sudo !!' to rerun with sudo\"; \\
            echo \"  su -c \\\"!!\\\" root  # Switch user to root and run last command\"; \\
            echo \"  !<number>          # Run specific command from history, e.g. !51\"; \\
            echo \"  !-<number>         # Run command relative to the last command, e.g. !-3 3rd last\"; \\
            echo \"  !?<string>?        # Run last command containing 'string', e.g. !?grep?\"; \\
            echo \"  !*                 # Insert parameters from previous command\"; \\
            echo \"    e.g. touch file1 file2 file3\"; \\
            echo \"         chmod +x !*   =>   chmod +x file1 file2 file3\"; \\
            echo \"    touch a.txt b.txt c.txt; echo !^; echo !:1; echo !:2; echo !:3; echo !\$; echo !*\"; \\
            echo \"  ^old^new           # Repeat last command, replacing 'old' with 'new'\"; \\
            echo \"  history -d <num>   # Delete a specific history entry\"; \\
            echo \"  HISTTIMEFORMAT=    # Temporarily clear history timestamp format\"; \\
            echo \"  fc -e <editor>     # Edit the last command in the editor\"; \\
            ;;
        *)
            if [[ \"\$option\" =~ ^[0-9]+$ ]]; then
                history | tail -n \"\$option\";
            else
                echo \"Invalid option. Use 'h' without arguments to see usage.\";
            fi ;;
    esac
}
